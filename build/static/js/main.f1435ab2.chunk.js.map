{"version":3,"sources":["Components/numberInput.js","Components/sudoku.js","pointer.png","Components/complete.js","HelperFunctions/saveValue.js","HelperFunctions/generatorSudoku.js","HelperFunctions/getResources.js","Components/shop.js","HelperFunctions/solve.js","Components/board.js","Components/header.js","Components/resources.js","App.js","index.js"],"names":["RenderInputFild","props","radioGroup","push","type","id","value","name","checked","selectedNumber","onChange","callBack","htmlFor","RenderNInput","buttons","i","size","className","NumberInput","Sudoku","useState","board","SetBoard","rows","squ","colGroup","bold","fontWeight","cursor","getFild","j","String","includes","onClick","gameBoard","setGameBoard","amount","replace","style","useEffect","squares","tds","DesplaySolved","fill","backgroundColor","width","fillbar","height","duration","solved","collect","collectAmount","disabled","newGame","clickBar","clickAmount","actives","animationDuration","src","SaveBoard","key","saveValue","length","localStorage","setItem","SaveResources","LoadResources","Number","getItem","LoadSolution","FillArray","splice","CheckRowAndCulumn","arrayIndex","checkRow","checkColumn","filter","number","CheckSquare","squareSize","squareX","squareY","checkSquare","CheckSukoku","checkBoard","JSON","parse","stringify","RemovePencelmark","rowID","culumnID","newBoard","randomNumber","pickerIndex","pickerArr","indexOf","curSquareY","Math","floor","curSquareX","RemoveNumbers","remove","randomIndex","arrOfIndex","removeIndex","sort","random","RandomNewIndex","solveList","forEach","index","GetIndex","MarkOG","CollectResources","curValue","Item","available","affordable","title","description","costs","startCosts","maxTimesPurchase","priors","priceFunc","incremenAmount","text1","text2","PriceFunc","ClickFun","IncremenAmount","PriceNumber","purchaseAmount","Id","Name","Costs","price","StartCosts","CostText","costText","IsAffordable","resources","find","resource","Value","Affordable","IsAvailable","ready","Priors","prior","DontUseId","Available","IsPurchase","MaxTimesPurchase","this","Title","Description","Text1","Text2","Shop","thisShopItems","items","map","shopItem","pruchaseFunc","pruchaseFuncs","undefined","Func","item","abs","toFixed","DynamicDescription","buyUint","SolveOne","highlight","split","trySolve","shift","Board","shopItemsTemp","startPrice","count","pow","log2","round","Array","SetGameBoard","SetSolved","FillBar","SetFillBar","Amounts","SetAmounts","Actives","SetActives","Intervals","SetIntervals","AmountParTime","tempResources","fildParSec","max","removePoints","setResources","NewGame","square","numArry","randomIndexNumber","notFull","arr1","arr2","MakeSudoku","Purchase","keyName","tempMax","resourceIndex","findIndex","barFill","tempFill","solve","tempGameBoard","NewSolve","shop","tempActives","tempIntervals","tempAmounts","GetIncrementels","savedBoard","curBoard","lengthValue","splitValue","LocalToArray","nextSolve","HighlightFild","active","interval","savedCallback","useRef","current","tick","setInterval","clearInterval","useInterval","PurchaseFunc","func","cost","tempActive","handleClick","DisplayResources","valuePerSecond","display","resourcesRow","Display","seleNumber","App","paams","Resource","Interval","AmountPar","currencys","SetResources","SetSelectedNumber","GobalsActives","SetGobalsActives","currency","gobalShopItemsTemp","handleInput","e","document","addEventListener","removeEventListener","x","y","lengt","checkFild","IsInSolve","new9x9","gobalShopItems","target","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f1435ab2.chunk.js","sourcesContent":["function RenderInputFild(props) {\r\n\tlet radioGroup = []\r\n\r\n\tradioGroup.push(\r\n\t\t<input\r\n\t\t\tkey={\"input\" + props.value}\r\n\t\t\ttype={\"radio\"}\r\n\t\t\tid={\"num\" + props.value}\r\n\t\t\tname={\"radioNumber\"}\r\n\t\t\tvalue={props.value}\r\n\t\t\tchecked={props.selectedNumber == props.value}\r\n\t\t\tonChange={props.callBack}\r\n\t\t/>\r\n\t)\r\n\r\n\tradioGroup.push(<label key={\"labl\" + props.value} htmlFor={\"num\" + props.value}> {props.value} </label>)\r\n\r\n\treturn radioGroup\r\n}\r\n\r\nfunction RenderNInput(props) {\r\n\tlet buttons = []\r\n\tfor (let i = 0; i < props.size; i++) {\r\n\t\tbuttons.push(<RenderInputFild selectedNumber={props.selectedNumber} callBack={props.callBack} value={i + 1} />)\r\n\t}\r\n\r\n\treturn <div className=\"radio-toolbar\"> {buttons} </div>\r\n}\r\n\r\nexport default function NumberInput(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<RenderNInput selectedNumber={props.selectedNumber} size={props.size} callBack={props.callBack} />\r\n\t\t</div>\r\n\t)\r\n}","import { useEffect, useState } from \"react\";\r\n\r\nexport default function Sudoku(props) {\r\n\tconst [board, SetBoard] = useState()\r\n\tlet rows = []\r\n\tlet squ = []\r\n\tlet colGroup = []\r\n\r\n\tconst bold = {\r\n\t\tfontWeight: 'bold',\r\n\t\tcursor: \"default\"\r\n\t}\r\n\r\n\tfunction getFild(value, i, j, callBack) {\r\n\r\n\t\tvalue = String(value)\r\n\r\n\r\n\t\tif (value != null && value.includes(\"h\")) { \r\n\t\t\treturn (\r\n\t\t\t\t<td className=\"highlight\" key={`tdK${i}${j}`}  onClick={() => callBack(i, j, props.gameBoard, props.setGameBoard, props.id, props.amount)}>\r\n\t\t\t\t\t{value.replace('h', '')}\r\n\t\t\t\t</td>)\r\n\t\t}\r\n\t\telse if (value != null && value.includes(\"og\")) {\r\n\t\t\treturn (\r\n\t\t\t\t<td style={bold} key={`tdK${i}${j}`}>\r\n\t\t\t\t\t{value.replace('og', '')}\r\n\t\t\t\t</td>)\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t<td key={`tdK${i}${j}`} onClick={() => callBack(i, j, props.gameBoard, props.setGameBoard, props.id, props.amount)}>\r\n\t\t\t\t\t{value}\r\n\t\t\t\t</td>)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfor (let i = 0; i < props.squares; i++) {\r\n\t\t\tsqu.push(<col key={'colG' + i} />)\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < (props.size / props.squares); i++) {\r\n\t\t\trows.push(<colgroup key={'colG' + i}>{squ}</colgroup>)\r\n\t\t}\r\n\r\n\t\tlet cusKey = 0\r\n\r\n\t\tfor (let i = 0; i < props.size; i++) {\r\n\t\t\tlet tds = []\r\n\r\n\t\t\tfor (let j = 0; j < props.size; j++) {\r\n\t\t\t\ttds.push(getFild(props.value[i][j], i, j, props.callBack))\r\n\t\t\t}\r\n\t\t\tcolGroup.push(<tr key={'trK' + i}>{tds}</tr>)\r\n\r\n\t\t\tif (i % props.squares == props.squares - 1) {\r\n\t\t\t\trows.push(<tbody key={'tb' + i}>{colGroup}</tbody>)\r\n\t\t\t\tcolGroup = []\r\n\t\t\t}\r\n\t\t\tSetBoard(rows)\r\n\r\n\t\t}\r\n\t}, [props.value])\r\n\r\n\treturn (\r\n\t\t<table className=\"sudokuTable\">\r\n\t\t\t{board}\r\n\t\t</table>\r\n\t)\r\n}","export default __webpack_public_path__ + \"static/media/pointer.aad9b0aa.png\";","import cursor from '../pointer.png';\r\n\r\n\r\nexport default function DesplaySolved(props) {\r\n\r\n    const fill = {\r\n        backgroundColor: \"crimson\",\r\n        width: `${props.fillbar}%`,\r\n        height: \"100%\",\r\n        cursor: \"pointer\"\r\n    }\r\n\r\n    const clicker = {\r\n        animationDuration: `${props.duration}`,\r\n        margenTop: \"8px\",\r\n        width: \"21px\",\r\n        height: \"17px\"\r\n      }\r\n\r\n    const clickerSize = {\r\n        margenTop: \"8px\",\r\n        width: \"21px\",\r\n        height: \"17px\"\r\n      }\r\n\r\n    return (\r\n        <div className=\"buttonList\">\r\n            {props.solved ?\r\n                <button className=\"button\" type=\"button\" onClick={() => props.collect(props.size + \"x\" + props.size, props.collectAmount, props.size, props.squares)}>Complete</button> :\r\n                <button className=\"button\" type=\"button\" disabled>Incomplete</button>}\r\n\r\n            <button className=\"button\" type=\"button\" onClick={() => props.newGame(props.size, props.squares)}>New Sudoku</button>\r\n\r\n            <div className=\"gameshop\">\r\n\r\n                <div id=\"Barfill\" onClick={() => props.clickBar(props.clickAmount)}>\r\n                    <div style={fill}></div>\r\n\r\n                </div>\r\n                <div className=\"wapper\">\r\n                    <img className={props.actives ? \"clicker clickerSize\": \"clickerSize\"}  style={{animationDuration: `${props.duration}ms`}} src={cursor}></img>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","function SaveBoard(board, key) {\r\n\r\n    let saveValue = `${board.length}::${board}`\r\n\r\n    localStorage.setItem(key, saveValue)\r\n}\r\n\r\nfunction SaveResources(key, value) {\r\n    localStorage.setItem(key, value)\r\n}\r\n\r\nfunction LoadResources(key) {\r\n    return Number(localStorage.getItem(key))\r\n}\r\n\r\nfunction LoadSolution(key) {\r\n    return localStorage.getItem(key)\r\n}\r\n\r\nfunction LocalToArray(value) {\r\n    let lengthValue = value.split('::')\r\n\r\n    if (lengthValue.length <= 1) {\r\n        return null\r\n    }\r\n\r\n    let length = lengthValue[0]\r\n\r\n    let splitValue = lengthValue[1].split(',')\r\n\r\n    let count = 0\r\n    let newBoard = []\r\n    for (let i = 0; i < length; i++) {\r\n        newBoard.push([])\r\n        for (let j = 0; j < length; j++) {\r\n            newBoard[i].push(String(splitValue[count]))\r\n            count++\r\n        }\r\n    }\r\n\r\n    return newBoard\r\n}\r\n\r\nexport { SaveBoard, LocalToArray, SaveResources, LoadResources , LoadSolution}","import { SaveResources } from \"./saveValue\"\r\n\r\nfunction FillArray(size) {\r\n    const fullNumberList = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n    return fullNumberList.splice(0, size)\r\n}\r\n\r\nfunction CheckRowAndCulumn(arrayIndex, board, size) {\r\n    let checkRow = FillArray(size)\r\n    let checkColumn = FillArray(size)\r\n\r\n    for (let i = 0; i < size; i++) {\r\n        checkRow = checkRow.filter(number => number != board[arrayIndex][i])\r\n        checkColumn = checkColumn.filter(number => number != board[i][arrayIndex])\r\n    }\r\n\r\n    return checkRow.length == 0 && checkColumn.length == 0\r\n}\r\n\r\nfunction CheckSquare(board, size, squareSize, squareX, squareY) {\r\n    let checkSquare = FillArray(size)\r\n\r\n    for (let i = 0; i < squareSize; i++) {\r\n        for (let j = 0; j < squareSize; j++) {\r\n            checkSquare = checkSquare.filter(number => number != board[i + squareY][j + squareX])\r\n        }\r\n    }\r\n    return checkSquare.length == 0 ? true : false\r\n}\r\n\r\nfunction CheckSukoku(size, board, squares) {\r\n    let checkBoard = JSON.parse(JSON.stringify(board))\r\n\r\n    for (let i = 0; i < checkBoard.length; i++) {\r\n        for (let j = 0; j < checkBoard.length; j++) {\r\n\r\n            if (String(checkBoard[i][j]).includes(\"og\")) {\r\n                checkBoard[i][j] = checkBoard[i][j].replace('og', '')\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < size; i++) {\r\n        if (!CheckRowAndCulumn(i, checkBoard, size))\r\n            return false\r\n    }\r\n\r\n    for (let i = 0; i < squares; i++) {\r\n        for (let j = 0; j < squares; j++) {\r\n            if (!CheckSquare(checkBoard, size, squares, i * squares, j * squares))\r\n                return false\r\n        }\r\n    }\r\n\r\n    return true\r\n}\r\n\r\nfunction MakeSudoku(size, square) {\r\n    let newBoard\r\n    do {\r\n        let numArry = FillArray(size)\r\n        newBoard = Array(size).fill(null).map(() => Array(size).fill(numArry))\r\n        let pickerArr = [[Math.floor(Math.random() * size), Math.floor(Math.random() * size)]]\r\n        let pickerIndex = []\r\n    \r\n        let index, randomNumber, randomIndexNumber\r\n    \r\n        let notFull = true\r\n        while (notFull) {\r\n    \r\n            pickerArr.sort((arr1, arr2) => arr1.length - arr2.length)\r\n    \r\n            index = 0\r\n            if (pickerArr.length > 0) {\r\n    \r\n                if (newBoard[pickerArr[index][0]][pickerArr[index][1]].length > 1) {\r\n    \r\n                    randomIndexNumber = Math.floor(Math.random() * newBoard[pickerArr[index][0]][pickerArr[index][1]].length)\r\n                    randomNumber = newBoard[pickerArr[index][0]][pickerArr[index][1]][randomIndexNumber]\r\n    \r\n                    newBoard[pickerArr[index][0]][pickerArr[index][1]] = [randomNumber]\r\n                    RemovePencelmark(pickerArr[index][0], pickerArr[index][1], newBoard, size, randomNumber, square, pickerIndex, pickerArr)\r\n                }\r\n                pickerArr.splice(index, 1)\r\n                pickerIndex.splice(index, 1)\r\n    \r\n            }\r\n    \r\n            if (pickerArr.length <= 0) {\r\n                notFull = false\r\n            }\r\n        }\r\n        \r\n    } while (!CheckSukoku(size, newBoard, square));\r\n\r\n\r\n    // if (!CheckSukoku(size, newBoard, square)) {\r\n    //     return MakeSudoku(size, square)\r\n    // }\r\n\r\n    return newBoard\r\n}\r\n\r\nfunction RemovePencelmark(rowID, culumnID, newBoard, size, randomNumber, squareSize, pickerIndex, pickerArr) {\r\n\r\n    for (let i = 0; i < size; i++) {\r\n        if (newBoard[rowID][i].length > 1) {\r\n            newBoard[rowID][i] = newBoard[rowID][i].filter(number => number != randomNumber)\r\n\r\n            if (newBoard[rowID][i].length <= 1) {\r\n                RemovePencelmark(rowID, i, newBoard, size, newBoard[rowID][i][0], squareSize, pickerIndex, pickerArr)\r\n\r\n                if (pickerIndex.includes(`${rowID}${i}`)) {\r\n                    pickerArr.splice(pickerIndex.indexOf(`${rowID}${i}`), 1)\r\n                    pickerIndex.splice(pickerIndex.indexOf(`${rowID}${i}`), 1)\r\n                }\r\n            }\r\n            else if (!pickerIndex.includes(`${rowID}${i}`)) {\r\n                pickerIndex.push(`${rowID}${i}`)\r\n                pickerArr.push([rowID, i])\r\n            }\r\n        }\r\n\r\n        if (newBoard[i][culumnID].length > 1) {\r\n            newBoard[i][culumnID] = newBoard[i][culumnID].filter(number => number != randomNumber)\r\n\r\n            if (newBoard[i][culumnID].length <= 1) {\r\n                RemovePencelmark(i, culumnID, newBoard, size, newBoard[i][culumnID][0], squareSize, pickerIndex, pickerArr)\r\n\r\n                if (pickerIndex.includes(`${i}${culumnID}`)) {\r\n                    pickerArr.splice(pickerIndex.indexOf(`${i}${culumnID}`), 1)\r\n                    pickerIndex.splice(pickerIndex.indexOf(`${i}${culumnID}`), 1)\r\n                }\r\n            }\r\n            else if (!pickerIndex.includes(`${i}${culumnID}`)) {\r\n                pickerIndex.push(`${i}${culumnID}`)\r\n                pickerArr.push([i, culumnID])\r\n            }\r\n        }\r\n    }\r\n\r\n    let curSquareY = Math.floor(rowID / squareSize) * squareSize\r\n    let curSquareX = Math.floor(culumnID / squareSize) * squareSize\r\n\r\n    for (let i = 0; i < squareSize; i++) {\r\n        for (let j = 0; j < squareSize; j++) {\r\n            if (newBoard[i + curSquareY][j + curSquareX].length > 1) {\r\n                newBoard[i + curSquareY][j + curSquareX] = newBoard[i + curSquareY][j + curSquareX].filter(number => number != randomNumber)\r\n\r\n                if (newBoard[i + curSquareY][j + curSquareX].length <= 1) {\r\n                    RemovePencelmark(i + curSquareY, j + curSquareX, newBoard, size, newBoard[i + curSquareY][j + curSquareX][0], squareSize, pickerIndex, pickerArr)\r\n\r\n                    if (pickerIndex.includes(`${i + curSquareY}${j + curSquareX}`)) {\r\n                        pickerArr.splice(pickerIndex.indexOf(`${i + curSquareY}${j + curSquareX}`), 1)\r\n                        pickerIndex.splice(pickerIndex.indexOf(`${i + curSquareY}${j + curSquareX}`), 1)\r\n                    }\r\n                }\r\n                else if (!pickerIndex.includes(`${i + curSquareY}${j + curSquareX}`)) {\r\n                    pickerIndex.push(`${i + curSquareY}${j + curSquareX}`)\r\n                    pickerArr.push([i + curSquareY, j + curSquareX])\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction MarkOG(board) {\r\n\r\n    for (let i = 0; i < board.length; i++) {\r\n        for (let j = 0; j < board.length; j++) {\r\n            if (board[i][j].length > 0) {\r\n                board[i][j] = `${board[i][j]}og`\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction RemoveNumbers(board, remove, id) {\r\n\r\n    let size = board.length\r\n    let randomIndex = RandomNewIndex(size, remove)\r\n\r\n    let solveList = []\r\n\r\n    randomIndex.forEach(index => {\r\n        let removeIndex = GetIndex(size, index)\r\n\r\n        solveList.push(`${removeIndex[0]}${removeIndex[1]}${board[removeIndex[0]][removeIndex[1]]}`)\r\n\r\n        board[removeIndex[0]][removeIndex[1]] = []\r\n    });\r\n\r\n    SaveResources(id + \"curSolveList\",solveList)\r\n\r\n    MarkOG(board)\r\n\r\n    return board\r\n}\r\n\r\nfunction RandomNewIndex(size, remove) {\r\n    let arrOfIndex = []\r\n    let removeIndex = []\r\n\r\n    for (let i = 0; i < size * size; i++) {\r\n        arrOfIndex.push(i)\r\n    }\r\n\r\n    arrOfIndex.sort(() => (Math.random() > 0.5) ? 1 : -1);\r\n\r\n    for (let i = 0; i < remove; i++) {\r\n        removeIndex.push(arrOfIndex[i])\r\n    }\r\n\r\n    return removeIndex\r\n}\r\n\r\nfunction GetIndex(size, number) {\r\n    let row = Math.floor(number / size)\r\n    let culumn = number % size\r\n    return [row, culumn]\r\n}\r\n\r\n\r\n\r\nexport { MakeSudoku, RemoveNumbers, CheckSukoku, FillArray, CheckSquare, CheckRowAndCulumn }","import { SaveResources, LoadResources } from \"./saveValue\";\r\n\r\nfunction CollectResources(key, value){\r\n\r\n    let curValue = LoadResources(key)\r\n    curValue = curValue + value\r\n    SaveResources(key, curValue)\r\n    \r\n    return curValue\r\n}\r\n\r\n\r\nexport{CollectResources}","import { useState, useEffect } from \"react\"\r\nimport { LoadResources } from \"../HelperFunctions/saveValue\"\r\nimport \"../styles/shop.css\"\r\n// import {Purchase} from '../Components/complete'\r\n\r\nclass Item {\r\n    constructor(available, affordable, name, title, description, costs,\r\n        startCosts, maxTimesPurchase, priors, priceFunc, incremenAmount, text1, text2) {\r\n        this.Available = available\r\n        this.Affordable = affordable\r\n        this.Name = name\r\n        this.Title = title\r\n        this.Description = description\r\n        this.Costs = costs\r\n        this.StartCosts = startCosts\r\n        this.MaxTimesPurchase = maxTimesPurchase\r\n        this.Priors = priors\r\n        this.PriceFunc = priceFunc\r\n        this.IncremenAmount = incremenAmount\r\n        this.Text1 = text1\r\n        this.Text2 = text2\r\n    }\r\n\r\n    Id\r\n    Use\r\n\r\n    PriceFunc = () => { }\r\n    ClickFun = () => { }\r\n    IncremenAmount = () => { }\r\n\r\n    PriceNumber = () => {\r\n        let purchaseAmount = LoadResources(this.Id + this.Name)\r\n        this.Costs.forEach((price, index) => {\r\n            this.Costs[index] = [this.Costs[index][0], this.PriceFunc(this.StartCosts[index], purchaseAmount)]\r\n        })\r\n    }\r\n\r\n    CostText = () => {\r\n        let costText = []\r\n\r\n        this.Costs.forEach(price => {\r\n            costText.push(<span>{price[0]}: <span className=\"price\"> {price[1]}</span><br /></span>)\r\n        });\r\n        return costText\r\n    }\r\n\r\n    IsAffordable = (resources) => {\r\n        let affordable = true\r\n        this.Costs.forEach(price => {\r\n            if (resources.find(resource => resource.Name == price[0]).Value < price[1]) {\r\n                affordable = false\r\n            }\r\n        })\r\n        this.Affordable = affordable\r\n    }\r\n\r\n    IsAvailable = () => {\r\n\r\n        let ready = true\r\n\r\n        this.Priors.forEach((prior) => {\r\n            let key = this.DontUseId ? prior : this.Id + prior\r\n            let tempPurchase = LoadResources(key)\r\n\r\n            if (tempPurchase <= 0) {\r\n                ready = false\r\n            }\r\n        })\r\n\r\n        if (ready)\r\n            this.Available = true\r\n\r\n    }\r\n\r\n    IsPurchase = () => {\r\n\r\n        let tempPurchase = LoadResources(this.Id + this.Name)\r\n\r\n        if (tempPurchase >= this.MaxTimesPurchase) {\r\n            this.Available = false\r\n        }\r\n    }\r\n}\r\n\r\nexport function shopItems() {\r\n    return [\r\n        new Item(true, false,\r\n            \"Clicker\",\r\n            \"Buy a clicker for the progress bar\",\r\n            \"It will click ones a second\",\r\n            [[\"4x4\", 11]], [11],1,\r\n            [\"\"],\r\n            (startPrice) => startPrice,\r\n            () => true),\r\n\r\n        new Item(false, false,\r\n            \"Clicker Speed\",\r\n            \"Upgrade the clickers speed\",\r\n            `The clicker vill click [] faster`,\r\n            [[\"4x4\", 15]], [15], 36,\r\n            [\"Clicker\"],\r\n            (startPrice, count) => Math.floor(startPrice + Math.pow(count, 1.2)),\r\n            (count) => 1000 - (Math.log2(count + 1) * 190),\r\n            \"The clicker vill click [\", \"]ms faster\"),\r\n\r\n        new Item(false, false,\r\n            \"Clicker strength\",\r\n            \"Upgrade the clickers strength\",\r\n            \"It will click [] stronger\",\r\n            [[\"4x4\", 20]], [20], 20,\r\n            [\"Clicker\", \"Clicker Speed\"],\r\n            (startPrice, count) => Math.floor(startPrice + Math.pow(count, 1.3)),\r\n            (count) => 2 + count,\r\n            // (count) => 1.13 + (Math.log2(count + 2.5) * 2.1) - 1,\r\n            \"Clicks vill click [\", \"] stronger\"),\r\n\r\n        new Item(false, false,\r\n            \"Highlighter\",\r\n            \"Highlight the next solved fild\",\r\n            \"\",\r\n            [[\"4x4\", 20]], [20], 1,\r\n            [\"Clicker\"],\r\n            (startPrice) => startPrice,\r\n            () => true),\r\n\r\n        new Item(false, false,\r\n            \"Auto Completer\",\r\n            \"The sudoku vil now auto complete\",\r\n            \"\",\r\n            [[\"4x4\", 30], [\"9x9\", 15]], [30, 15], 1,\r\n            [\"Clicker\", \"Clicker Speed\", \"Clicker strength\"],\r\n            (startPrice) => startPrice,\r\n            () => true),\r\n\r\n        new Item(false, false,\r\n            \"Increase points\",\r\n            \"Increase Points from this sudoku\",\r\n            \"It will increase the points gaind by []\",\r\n            [[\"4x4\", 80], [\"9x9\", 20]], [80,20], 10,\r\n            [\"Clicker\", \"Clicker Speed\", \"Auto Completer\"],\r\n            (startPrice, count) => Math.round(startPrice + Math.pow((count * 30), (1.3))),\r\n            (count) => count + 1,\r\n            \"It will increase the points gaind by [\", \"]\")\r\n    ]\r\n}\r\n\r\nexport function gobalShopItems() {\r\n\r\n    let new9x9 = new Item(false, false,\r\n        \"9x9 Sudoku\",\r\n        \"Buy a 9x9 sudoku\",\r\n        \"With this you can earn 9x9\",\r\n        [[\"4x4\", 50]], [50], 1,\r\n        [\"1#Clicker strength\"],\r\n        (startPrice) => startPrice,\r\n        () => true)\r\n\r\n    new9x9.DontUseId = true\r\n\r\n    return [new9x9]\r\n}\r\n\r\nfunction buyUint(item) {\r\n    if (!item.Available) {\r\n        return\r\n    }\r\n\r\n    return (\r\n        <button disabled={!item.Affordable} onClick={() => item.ClickFun(item.Costs, item.Name, item.MaxTimesPurchase, item.Id)} className=\"shopBT\" type=\"button\">{item.Name}\r\n            <div className=\"tooltiptext\">\r\n                <div className=\"description\">{item.Title}</div>\r\n                <div className=\"description\">{item.CostText()}</div>\r\n                <div className=\"description\">{item.Description}</div>\r\n            </div>\r\n        </button>\r\n    )\r\n}\r\n\r\nfunction DynamicDescription(item) {\r\n    let purchaseAmount = LoadResources(item.Id + item.Name)\r\n    let number = item.IncremenAmount(purchaseAmount + 1) - item.IncremenAmount(purchaseAmount)\r\n    number = Math.abs(number.toFixed(2))\r\n\r\n    return `${item.Text1}${number}${item.Text2}`\r\n}\r\n\r\nexport function Shop(props) {\r\n\r\n    let thisShopItems = props.items\r\n\r\n    const [Shop, SetShop] = useState(thisShopItems)\r\n\r\n    return (\r\n        <div className=\"shop\">\r\n            <div className=\"shopHeder\">\r\n                {props.name}\r\n            </div>\r\n\r\n            {Shop.map(shopItem => {\r\n\r\n                shopItem.Id = props.id\r\n\r\n                let pruchaseFunc = props.pruchaseFuncs.find(pruchaseFunc => pruchaseFunc.Name == shopItem.Name)\r\n                if (pruchaseFunc != undefined)\r\n                    shopItem.ClickFun = pruchaseFunc.Func\r\n\r\n                shopItem.IsAffordable(props.resources)\r\n                shopItem.PriceNumber()\r\n\r\n                shopItem.IsAvailable()\r\n                shopItem.IsPurchase()\r\n\r\n                if (shopItem.Text1)\r\n                    shopItem.Description = DynamicDescription(shopItem)\r\n\r\n                return buyUint(shopItem)\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}","import { LoadSolution, SaveResources } from \"./saveValue\"\r\n\r\nfunction SolveOne(board, id, highlight = false) {\r\n\r\n    let solveList = LoadSolution(id + \"curSolveList\")\r\n\r\n    if (solveList == \"\")\r\n        return\r\n\r\n    solveList = solveList.split(\",\")\r\n\r\n    for (let i = 0; i < solveList.length; i++) {\r\n        let trySolve = solveList[0].split(\"\")\r\n\r\n        if (board[trySolve[0]][trySolve[1]] != trySolve[2]) {\r\n\r\n            solveList.shift()\r\n            if (!highlight)\r\n                SaveResources(id + \"curSolveList\", solveList)\r\n\r\n            return trySolve\r\n        }\r\n        solveList.shift()\r\n    }\r\n}\r\n\r\nfunction IsInSolve(id, checkFild, board){\r\n    let solveList = LoadSolution(id + \"curSolveList\")\r\n\r\n    if (solveList == \"\")\r\n        return false\r\n\r\n    solveList = solveList.split(\",\")\r\n\r\n    if (board[checkFild[0]][checkFild[1]] == checkFild[2])\r\n        return false\r\n\r\n    let sovle = solveList.find(solve => solve == checkFild)\r\n\r\n    return sovle != undefined\r\n}\r\n\r\nexport { SolveOne, IsInSolve }","import Sudoku from './sudoku'\r\nimport Complete from './complete'\r\nimport { MakeSudoku, RemoveNumbers, CheckSukoku } from '../HelperFunctions/generatorSudoku'\r\nimport { useEffect, useState, useRef } from \"react\"\r\nimport { SaveBoard, LocalToArray, LoadResources, SaveResources } from '../HelperFunctions/saveValue'\r\nimport { CollectResources } from '../HelperFunctions/getResources'\r\nimport { Shop, shopItems } from './shop'\r\nimport { SolveOne, IsInSolve } from '../HelperFunctions/solve'\r\n\r\nexport function Board(props) {\r\n    let size = props.size\r\n    let squares = props.squares\r\n    let remove = props.remove\r\n    let resources = props.resources\r\n\r\n    let shopItemsTemp = shopItems()\r\n\r\n    const [gameBoard, SetGameBoard] = useState(Array(size).fill(Array(size).fill(null)))\r\n    const [solved, SetSolved] = useState(false)\r\n    const [FillBar, SetFillBar] = useState(0)\r\n    const [Amounts, SetAmounts] = useState([3, 2])\r\n    const [Actives, SetActives] = useState([false, false, false])\r\n    const [Intervals, SetIntervals] = useState([1000])\r\n\r\n    useEffect(() => {\r\n        GetIncrementels()\r\n        AmountParTime()\r\n        let savedBoard = localStorage.getItem(props.id + \"curBoard\")\r\n        if (savedBoard != null) {\r\n\r\n            let curBoard = LocalToArray(savedBoard)\r\n            SetGameBoard(curBoard)\r\n        }\r\n        else {\r\n            NewGame(size, squares);\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        SetSolved(CheckSukoku(size, gameBoard, squares))\r\n\r\n        if (Actives[2])\r\n            HighlightFild()\r\n\r\n    }, [gameBoard, Actives])\r\n\r\n    useInterval(clickBar, Amounts[0], Actives[0], Intervals[0])\r\n\r\n    useEffect(() => {\r\n        if (Actives[1] && solved)\r\n            collect(`${size}x${size}`, Amounts[1], size, squares)\r\n    }, [solved])\r\n\r\n    useEffect(() => {\r\n        AmountParTime()\r\n    }, [Intervals, Amounts])\r\n\r\n    function GetIncrementels() {\r\n        let shop = shopItemsTemp\r\n        let tempActives = Actives\r\n        let tempIntervals = Intervals\r\n        let tempAmounts = Amounts\r\n\r\n        tempActives[0] = LoadResources(props.id + shop[0].Name) > 0\r\n        tempIntervals[0] = shop[1].IncremenAmount(LoadResources(props.id + shop[1].Name))\r\n        tempAmounts[0] = shop[2].IncremenAmount(LoadResources(props.id + shop[2].Name))\r\n        tempActives[2] = LoadResources(props.id + shop[3].Name) > 0\r\n        tempActives[1] = LoadResources(props.id + shop[4].Name) > 0\r\n        tempAmounts[1] = shop[5].IncremenAmount(LoadResources(props.id + shop[5].Name))\r\n\r\n        SetIntervals(tempIntervals)\r\n        SetActives(tempActives)\r\n        SetAmounts(tempAmounts)\r\n    }\r\n\r\n    function AmountParTime() {\r\n        if (Actives[0]) {\r\n\r\n            let tempResources = resources\r\n            let name = `${size}x${size}`\r\n\r\n            let fildParSec = 100 / (1000 / Math.max(Intervals[0], 0.01) * Amounts[0])\r\n\r\n            let removePoints = (Amounts[1] * (size * size)) / (fildParSec * remove)\r\n\r\n            let incremenAmount = (Amounts[1] / fildParSec) + removePoints\r\n\r\n            tempResources.find(resource => resource.Name == name).IncremenAmount = incremenAmount\r\n\r\n            props.setResources([...tempResources])\r\n        }\r\n    }   \r\n\r\n    function HighlightFild() {\r\n        let nextSolve = SolveOne(gameBoard, props.id, true)\r\n        let tempGameBoard = [...gameBoard]\r\n\r\n        if (nextSolve == null ||\r\n            tempGameBoard[nextSolve[0]][nextSolve[1]] == null ||\r\n            tempGameBoard[nextSolve[0]][nextSolve[1]].includes(\"h\")) {\r\n            return\r\n        }\r\n        tempGameBoard[nextSolve[0]][nextSolve[1]] = tempGameBoard[nextSolve[0]][nextSolve[1]] + \"h\"\r\n        SetGameBoard(tempGameBoard)\r\n        SaveBoard(tempGameBoard, `${props.id}curBoard`)\r\n    }\r\n\r\n    function NewGame(size, squares) {\r\n        let newBoard = MakeSudoku(size, squares)\r\n        newBoard = RemoveNumbers(newBoard, remove, props.id)\r\n        SetGameBoard(newBoard)\r\n        SaveBoard(newBoard, props.id + `curBoard`)\r\n    }\r\n\r\n    function Purchase(costs, keyName, max) {\r\n\r\n        let tempMax = LoadResources(keyName)\r\n        if (tempMax >= max) {\r\n            return\r\n        }\r\n\r\n        SaveResources(keyName, tempMax + 1)\r\n        let tempResources = resources\r\n\r\n        costs.forEach(price => {\r\n            let resourceIndex = tempResources.findIndex(resource => resource.Name == price[0])\r\n            tempResources[resourceIndex].Value = tempResources[resourceIndex].Value - price[1]\r\n            SaveResources(price[0], tempResources[resourceIndex].Value)\r\n        })\r\n\r\n        props.setResources([...tempResources])\r\n    }\r\n\r\n    function PurchaseClicker(cost, keyName, max, id) {\r\n        Purchase(cost, id + keyName, max)\r\n        let tempActive = Actives\r\n        tempActive[0] = true\r\n        SetActives([...tempActive])\r\n        AmountParTime()\r\n    }\r\n\r\n    function PurchaseClickerSpeed(cost, keyName, max, id) {\r\n        Purchase(cost, id + keyName, max)\r\n        let purchaseAmount = LoadResources(props.id + keyName)\r\n\r\n        let tempIntervals = Intervals\r\n        tempIntervals[0] = shopItemsTemp[1].IncremenAmount(purchaseAmount)\r\n\r\n        SetIntervals([...tempIntervals])\r\n    }\r\n\r\n    function PurchaseClickerStrengh(cost, keyName, max, id) {\r\n        Purchase(cost, id + keyName, max)\r\n\r\n        let purchaseAmount = LoadResources(props.id + keyName)\r\n        let tempAmounts = Amounts\r\n        tempAmounts[0] = shopItemsTemp[2].IncremenAmount(purchaseAmount)\r\n        SetAmounts([...tempAmounts])\r\n    }\r\n\r\n    function PurchaseCompleter(cost, keyName, max, id) {\r\n        Purchase(cost, id + keyName, max)\r\n        let tempActive = Actives\r\n        tempActive[1] = true\r\n        SetActives([...tempActive])\r\n    }\r\n\r\n    function PurchaseIncrease4x4(cost, keyName, max) {\r\n        Purchase(cost, props.id + keyName, max)\r\n\r\n        let purchaseAmount = LoadResources(props.id + keyName)\r\n        let tempAmounts = Amounts\r\n        tempAmounts[1] = shopItemsTemp[5].IncremenAmount(purchaseAmount)\r\n        SetAmounts([...tempAmounts])\r\n    }\r\n\r\n    function PurchaseHighlight(cost, keyName, max, id) {\r\n        Purchase(cost, id + keyName, max)\r\n        let tempActive = Actives\r\n        tempActive[2] = true\r\n        SetActives([...tempActive])\r\n    }\r\n\r\n    function clickBar(barFill) {\r\n        let tempFill = FillBar + barFill\r\n\r\n        if (tempFill >= 100) {\r\n            if (solved) {\r\n                SetFillBar(100)\r\n            }\r\n            else {\r\n                SetFillBar(0)\r\n                NewSolve(SolveOne(gameBoard, props.id))\r\n            }\r\n        }\r\n        else\r\n            SetFillBar(tempFill)\r\n    }\r\n\r\n    class PurchaseFunc {\r\n        constructor(name, func) {\r\n            this.Name = name\r\n            this.Func = func\r\n        }\r\n    }\r\n\r\n    let pruchaseFuncs = [\r\n        new PurchaseFunc(shopItemsTemp[0].Name, PurchaseClicker),\r\n        new PurchaseFunc(shopItemsTemp[1].Name, PurchaseClickerSpeed),\r\n        new PurchaseFunc(shopItemsTemp[2].Name, PurchaseClickerStrengh),\r\n        new PurchaseFunc(shopItemsTemp[3].Name, PurchaseHighlight),\r\n        new PurchaseFunc(shopItemsTemp[4].Name, PurchaseCompleter),\r\n        new PurchaseFunc(shopItemsTemp[5].Name, PurchaseIncrease4x4),\r\n    ]\r\n\r\n    function collect(name, value, size, squares) {\r\n\r\n        let tempResources = resources\r\n\r\n        tempResources.find(resource => resource.Name == name).Value = CollectResources(name, value * (size * size))\r\n\r\n        props.setResources([...tempResources])\r\n        NewGame(size, squares)\r\n    }\r\n\r\n    function NewSolve(solve) {\r\n        if (solve == null) {\r\n            return\r\n        }\r\n\r\n        let tempResources = resources\r\n        let name = `${size}x${size}`\r\n        tempResources.find(resource => resource.Name == name).Value = CollectResources(name, Amounts[1])\r\n        props.setResources([...tempResources])\r\n\r\n        let tempGameBoard = [...gameBoard]\r\n        tempGameBoard[solve[0]][solve[1]] = String(solve[2] + \"og\")\r\n        SetGameBoard(tempGameBoard)\r\n        SaveBoard(tempGameBoard, `${props.id}curBoard`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"game\">\r\n                <div>\r\n                    <div className=\"sudoku\">\r\n                        <Sudoku\r\n                            size={size}\r\n                            squares={squares}\r\n                            callBack={props.handleClick}\r\n                            amount={Amounts[1]}\r\n                            value={gameBoard}\r\n                            gameBoard={gameBoard}\r\n                            setGameBoard={SetGameBoard}\r\n                            id={props.id}\r\n                        ></Sudoku>\r\n                        <Complete\r\n                            solved={solved}\r\n                            newGame={NewGame}\r\n                            squares={squares}\r\n                            size={size}\r\n                            collect={collect}\r\n                            clickBar={clickBar}\r\n                            fillbar={FillBar}\r\n                            clickAmount={Amounts[0]}\r\n                            collectAmount={Amounts[1]}\r\n                            duration={Intervals[0]}\r\n                            actives={Actives[0]}\r\n                        ></Complete>\r\n                    </div>\r\n                </div>\r\n                <div className=\"shopDiv\">\r\n                    <Shop\r\n                        resources={resources}\r\n                        pruchaseFuncs={pruchaseFuncs}\r\n                        name={size + \"x\" + size}\r\n                        id={props.id}\r\n                        items={shopItemsTemp}\r\n                    ></Shop>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction useInterval(callBack, amount, active, interval) {\r\n    const savedCallback = useRef();\r\n\r\n    useEffect(() => {\r\n        savedCallback.current = callBack;\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            function tick() {\r\n                savedCallback.current(amount);\r\n            }\r\n\r\n            let id = setInterval(tick, interval);\r\n            return () => clearInterval(id);\r\n        }\r\n    });\r\n}","\r\nexport default function DesplaySolved(props) {\r\n    return (\r\n        <div className=\"topBar\">\r\n            <span className=\"topText\">\r\n                Idel Sudoku\r\n            </span>\r\n            <span className=\"help\">?\r\n            </span>\r\n            <div className=\"hide\">\r\n                This is an Idel Sudoku game. <br/>\r\n                To get started solve the sudoku or click the process bar next to the pointer  <br/><br/> \r\n                \r\n                More items in the shop vill become purchasable has you buy more <br/><br/>\r\n                \r\n                How to play Sukodu <br/>\r\n                - Every square has to contain a single number <br/>\r\n                - Only the numbers from 1 through to size can be used<br/>\r\n                - Each size x size box can only contain each number from 1 to size once<br/>\r\n                - Each vertical column can only contain each number from 1 to size once<br/>\r\n                - Each horizontal row can only contain each number from 1 to size once\r\n            </div>\r\n        </div>\r\n    )\r\n}","import \"../styles/resources.css\"\r\n\r\nfunction resourcesRow(value, name, valuePerSecond, display) {\r\n\r\n    if (!display)\r\n        return\r\n\r\n    return (\r\n        <tr>\r\n            <td>{name}</td>\r\n            <td>{Number(value).toFixed(2)}</td>\r\n            <td>{Number(valuePerSecond).toFixed(2)}/s</td>\r\n        </tr>\r\n    )\r\n\r\n}\r\n\r\nexport default function DisplayResources(props) {\r\n\r\n    return (\r\n        <dis>\r\n            <table className=\"resource\">\r\n                <tbody>\r\n                    <th>Resources</th>\r\n                    <th></th>\r\n                    <th></th>\r\n\r\n                    {props.resources.map(resource => {\r\n                        return resourcesRow(resource.Value, resource.Name, resource.IncremenAmount, resource.Display)\r\n                    })}\r\n\r\n                </tbody>\r\n            </table>\r\n        </dis>\r\n    )\r\n}","import './App.css';\r\nimport NumberInput from './Components/numberInput'\r\nimport { useEffect, useState, useRef } from \"react\"\r\nimport { Board } from \"./Components/board\"\r\nimport Header from './Components/header'\r\nimport DisplayResources from './Components/resources'\r\nimport { SaveBoard, LoadResources, SaveResources } from './HelperFunctions/saveValue'\r\nimport { Shop, gobalShopItems } from './Components/shop'\r\nimport { IsInSolve } from './HelperFunctions/solve'\r\nimport { CollectResources } from './HelperFunctions/getResources'\r\n\r\nlet seleNumber = 1\r\n\r\nexport default function App(paams) {\r\n\tlet id = \"0#\"\r\n\r\n\tclass Resource {\r\n\t\tName = \"name\"\r\n\t\tValue = 0\r\n\t\tInterval = 0\r\n\t\tAmountPar = 0\r\n\t\tDisplay = false\r\n\r\n\t\tconstructor(name, value, interval, incremenAmount, display) {\r\n\t\t\tthis.Name = name\r\n\t\t\tthis.Value = value\r\n\t\t\tthis.Interval = interval\r\n\t\t\tthis.IncremenAmount = incremenAmount\r\n\t\t\tthis.Display = display\r\n\t\t}\r\n\t}\r\n\r\n\tlet currencys =\r\n\t\t[\r\n\t\t\tnew Resource(\"4x4\", 0, 0, 0, true),\r\n\t\t\tnew Resource(\"9x9\", 0, 0, 0, false)\r\n\t\t]\r\n\r\n\tconst [resources, SetResources] = useState(currencys)\r\n\tconst [selectedNumber, SetSelectedNumber] = useState(seleNumber)\r\n\tconst [GobalsActives, SetGobalsActives] = useState([false])\r\n\r\n\tuseEffect(() => {\r\n\t\tSetResources([...LoadAllResources()])\r\n\t\tGetIncrementels()\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleInput = (e) => {\r\n\t\t\tif (e.key <= 9 && e.key != 0) {\r\n\t\t\t\tseleNumber = e.key\r\n\t\t\t\tSetSelectedNumber(e.key)\r\n\t\t\t}\r\n\t\t}\r\n\t\tdocument.addEventListener(\"keydown\", handleInput);\r\n\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"keydown\", handleInput);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tfunction GetIncrementels() {\r\n\t\tlet tempActives = GobalsActives\r\n\r\n\t\ttempActives[0] = LoadResources(id + gobalShopItemsTemp[0].Name) > 0\r\n\r\n\t\tSetGobalsActives(tempActives)\r\n\t}\r\n\r\n\tfunction LoadAllResources() {\r\n\t\tcurrencys.map((currency, index, currencys) => {\r\n\t\t\tcurrencys[index].Value = LoadResources(currency.Name)\r\n\t\t\tif (currencys[index].Value > 0)\r\n\t\t\t\tcurrencys[index].Display = true\r\n\t\t})\r\n\r\n\t\treturn currencys\r\n\t}\r\n\r\n\tconst handleNumberClick = (number) => {\r\n\t\tseleNumber = number.target.value\r\n\t\tSetSelectedNumber(number.target.value)\r\n\t}\r\n\r\n\tfunction handleClick(x, y, gameBoard, SetGameBoard, id, amount) {\r\n\t\tif (gameBoard == null || gameBoard.lengt >= seleNumber) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tlet tempGameBoard = [...gameBoard]\r\n\t\tif (IsInSolve(id, `${x}${y}${seleNumber}`, gameBoard)) {\r\n\t\t\tlet tempResources = resources\r\n\t\t\tlet name = `${gameBoard.length}x${gameBoard.length}`\r\n\r\n\t\t\ttempResources.find(resource => resource.Name == name).Value = CollectResources(name, amount)\r\n\r\n\t\t\tSetResources([...tempResources])\r\n\t\t}\r\n\t\ttempGameBoard[x][y] = String(seleNumber)\r\n\t\tSetGameBoard([...tempGameBoard])\r\n\t\tSaveBoard(tempGameBoard, id + \"curBoard\")\r\n\r\n\t}\r\n\r\n\tlet gobalShopItemsTemp = gobalShopItems()\r\n\r\n\tclass PurchaseFunc {\r\n\t\tconstructor(name, func) {\r\n\t\t\tthis.Name = name\r\n\t\t\tthis.Func = func\r\n\t\t}\r\n\t}\r\n\r\n\tlet pruchaseFuncs = [\r\n\t\tnew PurchaseFunc(gobalShopItemsTemp[0].Name, Purchase9x9),\r\n\t]\r\n\r\n\tfunction Purchase(costs, keyName, max) {\r\n\r\n\t\tlet tempMax = LoadResources(keyName)\r\n\t\tif (tempMax >= max) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tSaveResources(keyName, tempMax + 1)\r\n\t\tlet tempResources = resources\r\n\r\n\t\tcosts.forEach(price => {\r\n\t\t\tlet resourceIndex = tempResources.findIndex(resource => resource.Name == price[0])\r\n\t\t\ttempResources[resourceIndex].Value = tempResources[resourceIndex].Value - price[1]\r\n\t\t\tSaveResources(price[0], tempResources[resourceIndex].Value)\r\n\t\t})\r\n\r\n\t\tSetResources([...tempResources])\r\n\t}\r\n\r\n\tfunction Purchase9x9(costs, keyName, max, id) {\r\n\t\tPurchase(costs, id + keyName, max)\r\n\t\tlet tempActive = GobalsActives\r\n\t\ttempActive[0] = true\r\n\t\tlet tempResources = resources\r\n\t\ttempResources[1].Display = true\r\n\t\tSetResources([...tempResources])\r\n\t\tSetGobalsActives([...tempActive])\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header></Header>\r\n\r\n\t\t\t<DisplayResources resources={resources} ></DisplayResources>\r\n\t\t\t<NumberInput selectedNumber={selectedNumber} size={GobalsActives[0] ? 9 : 4} callBack={handleNumberClick} />\r\n\r\n\t\t\t<div className=\"gameshop\">\r\n\r\n\t\t\t\t<div >\r\n\t\t\t\t\t<Board\r\n\t\t\t\t\t\tid={\"1#\"}\r\n\t\t\t\t\t\tsize={4}\r\n\t\t\t\t\t\tsquares={2}\r\n\t\t\t\t\t\tremove={7}\r\n\t\t\t\t\t\tresources={resources}\r\n\t\t\t\t\t\tsetResources={SetResources}\r\n\t\t\t\t\t\thandleClick={handleClick}\r\n\t\t\t\t\t\tcurrencys={currencys}\r\n\t\t\t\t\t></Board>\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tGobalsActives[0] ?\r\n\t\t\t\t\t\t\t<Board\r\n\t\t\t\t\t\t\t\tid={\"2#\"}\r\n\t\t\t\t\t\t\t\tsize={9}\r\n\t\t\t\t\t\t\t\tsquares={3}\r\n\t\t\t\t\t\t\t\tremove={45}\r\n\t\t\t\t\t\t\t\tresources={resources}\r\n\t\t\t\t\t\t\t\tsetResources={SetResources}\r\n\t\t\t\t\t\t\t\thandleClick={handleClick}\r\n\t\t\t\t\t\t\t\tcurrencys={currencys}\r\n\t\t\t\t\t\t\t></Board>\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Shop\r\n\t\t\t\t\t\tresources={resources}\r\n\t\t\t\t\t\tpruchaseFuncs={pruchaseFuncs}\r\n\t\t\t\t\t\tname={\"Global Shop\"}\r\n\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\titems={gobalShopItemsTemp}\r\n\t\t\t\t\t></Shop>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}